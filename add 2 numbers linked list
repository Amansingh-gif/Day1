/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummynode= new ListNode(-1);
        ListNode* temp=l1;
        ListNode* temp2=l2;
        ListNode* curr=dummynode;
        int carry=0;
        while(temp!=NULL || temp2!=NULL){
            int sum=carry;
            if(temp) sum+=temp->val;
            if(temp2) sum+=temp2->val;
            ListNode* newnode= new ListNode(sum%10);
            carry=sum/10;
            curr->next=newnode;
            curr=curr->next;
            if(temp) temp=temp->next;
            if(temp2) temp2=temp2->next;
            if(carry){
                ListNode* newnodee= new ListNode(1);
                curr->next=newnodee;
            }
           
        } return dummynode->next;
    } 
};
